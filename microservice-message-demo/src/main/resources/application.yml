#eureka:
#  client:
#    serviceUrl:
#      defaultZone: http://discovery:8761/eureka/
#  instance:
#    preferIpAddress: true
#ribbon:
#  eureka:
#    enabled: true         # 默认为true。如果设置为false，Ribbon将不会从Eureka中获得服务列表，而是使用静态配置的服务列表。静态服务列表可使用：<client>.ribbon.listOfServers来指定。参考：http://projects.spring.io/spring-cloud/docs/1.0.3/spring-cloud.html#spring-cloud-ribbon-without-eureka
#
### 参考：https://spring.io/guides/gs/client-side-load-balancing/

#mq config
#spring.rabbitmq.address: localhost:5672

server:
  port: 9020
spring:
  application:
    name: microservice-message-provdier

#mq config
#spring.rabbitmq.address: rabbitMQ默认为5672
spring.rabbitmq.host: localhost
spring.rabbitmq.port: 5672
#rabbitMQ的用户密码
spring.rabbitmq.username: guest
spring.rabbitmq.password: guest

spring.rabbitmq.listener.concurrency: 5
spring.rabbitmq.listener.max-concurrency: 20
spring.rabbitmq.listener.retry.enabled: true
#虚拟主机路径
spring.rabbitmq.virtual.host: /
spring.rabbitmq.cache.channel.size: 100
# 消息发送确认与消息接收确认 配置
spring.rabbitmq.listener.acknowledge-mode: manual
#可以确保消息在未被队列接收时返回
spring.rabbitmq.listener.publish-returns: true;
#设置此属性配置可以确保消息成功发送到交换器
#spring.rabbitmq.publisher-confirms: true
#在使用上面的属性配置时通常会和mandatory属性配合一起使用：指定消息在没有被队列接收时是否强行退回还是直接丢弃
#spring.rabbitmq.template.mandatory: true


#redis config
redis.host: localhost
redis.port: 6379
redis.timeout: 10000
redis.pool.max-active: 20
redis.pool.max-wait: -1
redis.pool.max-idle: 10
redis.pool.min-idle: 5
